stages:
  - build
  - deploy

variables:
  DOCKER_TLS_CERTDIR: ""
  IMAGE: "$DOCKER_USERNAME/python-flask:$CI_COMMIT_SHORT_SHA"
  IMAGE_LATEST: "$DOCKER_USERNAME/python-flask:latest"
  EC2_USER: "ubuntu"
  EC2_HOST: "$EC2_HOST"

build:
  stage: build
  image: docker:20.10
  services:
    - docker:20.10-dind

  before_script:
  - mkdir -p ~/.ssh
  - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - eval $(ssh-agent -s)
  - ssh-add ~/.ssh/id_rsa
  - ssh-keyscan -H github.com >> ~/.ssh/known_hosts

  script:
    - docker build -t $IMAGE .
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker push $IMAGE
    - docker tag $IMAGE $IMAGE_LATEST
    - docker push $IMAGE_LATEST
  only:
    - main

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - chmod 600 "$SSH_PRIVATE_KEY"
    - eval $(ssh-agent -s)
    - ssh-add "$SSH_PRIVATE_KEY"
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts
  script:
    - ssh $EC2_USER@$EC2_HOST "
        docker pull $IMAGE_LATEST &&
        docker stop flask_app || true &&
        docker rm flask_app || true &&
        docker run -d --name flask_app -p 80:5000 --restart unless-stopped $IMAGE_LATEST
      "
